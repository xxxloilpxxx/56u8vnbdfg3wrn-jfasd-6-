getgenv().SecureMode = true
local s,e = pcall(function()
    if not (game.PlaceId == 3233893879) then return end
    repeat
		task.wait()
	until game:IsLoaded()
    if getgenv().__mpho_1__loaded__ == true then return warn("[mopsHub Loader]: mopsHub is already loaded.") end
	getgenv().__mpho_1__loaded__ = true

    getgenv = getgenv

    --MODULES
	local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
	local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
	local Notify = AkaliNotif.Notify;
	local writeclipboard,encodeb64,decodeb64,Request = ((syn and syn.write_clipboard) or setclipboard),((syn and syn.crypt.base64.encode) or (Krnl and Krnl.Base64.Encode)),((syn and syn.crypt.base64.decode) or (Krnl and Krnl.Base64.Decode)),(http_request or syn and syn.request or request or nil)
	local Player = game:GetService("Players").LocalPlayer
	local game_client = {}
	local TS = require(game:GetService("ReplicatedStorage"):WaitForChild("TS"))
    local Timer = TS.Timer;
    local Camera = TS.Camera
    local RecoilUpdate = clonefunction(newcclosure(TS.Camera.Recoil.Update))
    local Control = getupvalue(TS.Timer.BindToHeartbeat, 1 + 0)["Control"]
    local Raycast = require(game:GetService("ReplicatedStorage").TS).Raycast;
	local PlayerTable = getupvalue(require(game.ReplicatedStorage.TS).Characters.GetCharacter,1)
	local RemoteFolder
	local RemoteObjects={}
	local settings = {
		autoLoadConfigs = nil,
	}

    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer
    local Mouse = Player:GetMouse()
    local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")

	local BodyVelocity = Instance.new("BodyVelocity")
	BodyVelocity.Velocity = Vector3.zero
	BodyVelocity.MaxForce = Vector3.zero

    --STUFF THAT NEEDS TO RUN AT EXECUTE
	if isfile("/mopsHub/settings_badbusiness.mhs") then
		local s,e = pcall(function()
			local file_settings = readfile("/mopsHub/settings_badbusiness.mhs")
			local parsedSettings = {}
			local s,e = pcall(function()
				parsedSettings = game:GetService("HttpService"):JSONDecode(file_settings)
			end)
			if s then
				for _,v in pairs(parsedSettings) do
					settings[_] = v
				end
			else
				warn("[mopsHub Error]: Unable to parse local saved settings json.\nError:\n\n> ".. e)
			end
		end)
		if not s and e then
			print(e)
		end
	else
		autoLoadConfigs = true
		writefile("/mopsHub/settings_badbusiness.mhs", tostring(game:GetService("HttpService"):JSONEncode(settings)))
		print("[mopsHub Debug]: Created local config file.")
	end

    getgenv()._WINDOW = {
		Tabs = {},
	}

	--WINDOW CONFIG
	local _TABS = {
		"Weapon",
		"Visual",
		"Character",
		"Credits"
	}

    local _FUNCTIONS = {
		["Weapon"] = {
			{
                Function = "CreateSection",
                Args = "━ Aimbot ━",
            },
			{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Silent Aimbot",
					Flag = "_silentaim",
					Callback = function(Value)
						getgenv()._silentaim = Value
					end,
				}
			},
			{
                Function = "CreateSlider",
                _envState = 100,
                Args = {
                    Name = "FOV",
                    Flag = "_fov",
                    CurrentValue = 100,
                    Range = {100, 750},
					Increment = 1,
					Suffix = "",
                    Callback = function(Value)
                        getgenv()._fov = Value
                    end
                }
            },
			{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Show FOV",
					Flag = "_showfov",
					Callback = function(Value)
						getgenv()._showfov = Value
					end,
				}
			},
			{
				Function = "CreateDropdown",
				_envState = "Random",
				Args = {
					Name = "Hit Part",
					Flag = "_hitpart",
					Options = {"Random","Head","Chest"},
					CurrentOption = "Random",
					Callback = function(Value)
						getgenv()._hitpart = Value
					end,
				}
			},
			{
                Function = "CreateSlider",
                _envState = 100,
                Args = {
                    Name = "Hit Chance",
                    Flag = "_hitchance",
                    CurrentValue = 100,
                    Range = {0, 100},
					Increment = 1,
					Suffix = "%",
                    Callback = function(Value)
                        getgenv()._hitchance = Value
                    end
                }
            },
			{
                Function = "CreateSection",
                Args = "━ Gun Mods ━",
            },
			{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Infinite Ammo",
					Flag = "_infammo",
					Callback = function(Value)
						getgenv()._infammo = Value

						if (Value == false) then
							if game_client:isAlive() then
								RemoteFolder.Item_Paintball:FireServer("Reload",PlayerTable[Player].Backpack.Equipped.Value)
								PlayerTable[Player].Backpack.Equipped.Value.State.Ammo.Value = 5
							end
						end
					end,
				}
			},
			{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "No Recoil",
					Flag = "_norecoil",
					Callback = function(Value)
						getgenv()._norecoil = Value
					end,
				}
			},
			{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "No Spread",
					Flag = "_nospread",
					Callback = function(Value)
						getgenv()._nospread = Value
					end,
				}
			},
			{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Wallbang",
					Flag = "_wallbang",
					Callback = function(Value)
						getgenv()._wallbang = Value
					end,
				}
			},
		},
		["Character"] = {
			{
                Function = "CreateSection",
                Args = "━ Movement Modifications ━",
            },
			{
                Function = "CreateSlider",
                _envState = 2,
                Args = {
                    Name = "Sprint Speed",
                    Flag = "_sprintSpeed",
                    CurrentValue = 2,
                    Range = {2, 5},
					Increment = 1,
					Suffix = "",
                    Callback = function(Value)
                        getgenv()._sprintSpeed = Value
                    end
                }
            },
			{
                Function = "CreateSection",
                Args = "━ Fly ━",
            },
			--[[{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Fly",
					Flag = "_fly",
					Callback = function(Value)
						getgenv()._fly = Value
					end,
				}
			},
			{
                Function = "CreateSlider",
                _envState = 100,
                Args = {
                    Name = "Fly Speed",
                    Flag = "_flyspeed",
                    CurrentValue = 100,
                    Range = {10, 100},
					Increment = 1,
					Suffix = "",
                    Callback = function(Value)
                        getgenv()._flyspeed = Value
                    end
                }
            },
			{
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Noclip",
					Flag = "_noclip",
					Callback = function(Value)
						getgenv()._noclip = Value
					end,
				}
			},]]
			{
				Function = "CreateParagraph",
				_envState = false,
				Args = {Title = "Note:",Content = "Fly comming soon!"}
			},
		},
		["Visual"] = {
			{
				Function = "CreateParagraph",
				_envState = false,
				Args = {Title = "Note:",Content = "ESP comming soon!"}
			},
		}
    }

    local _CREDITS = {
		["Developers"] = {
			{"ShyFlooo","Programmer"},
		},
	}

    --Functions | Source: some self made

    --CREATE WINDOW
	local Window = Rayfield:CreateWindow({
		Name = "mopsHub - Bad Business",
		LoadingTitle = "mopsHub - Bad Business",
		LoadingSubtitle = "by ShyFlooo",
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "/mopsHub/.config", -- Create a custom folder for your hub/game
			FileName = "mopshub_badbusiness"
		},
		KeySystem = false, -- Set this to true to use our key system
		KeySettings = {
			Title = "mopsHub - Bad Business",
			Subtitle = "Key System",
			Note = "Key here (copied): discord.gg/g4EGAwjUAK",
			FileName = "MOPSHUBKEY",
			SaveKey = true,
			GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
			Key = ""
		}
	})

	--SETUP WINDOW
	for index, name in pairs(_TABS) do
		local w = Window:CreateTab(name)
		getgenv()._WINDOW.Tabs[name] = w
	end
    getgenv()._WINDOW.Tabs["Credits"]:CreateSection("━ Credits ━")
	for index, value in pairs(_CREDITS) do
		local content = ""
		for i,data in pairs(value) do
			if #data[2] > 0 then
				content = content.."\n"..data[1].." - ".. data[2]
			else
				content = content.."\n"..data[1]
			end
		end
		getgenv()._WINDOW.Tabs["Credits"]:CreateParagraph({Title = index, Content = content})
	end

	for index, funcs in pairs(_FUNCTIONS) do
		print("Loaded "..#funcs.." function(s) for ".. index)
		for i, func in pairs(funcs) do
			if func.Function and func.Args then
				local Tab = getgenv()._WINDOW.Tabs[index]
				if Tab then
					local s,e = pcall(function()
						local f,l = func.Function, true
						if f == "CreateSection" then
							Tab:CreateSection(func.Args)
						elseif f == "CreateButton" then
							Tab:CreateButton(func.Args)
						elseif f == "CreateToggle" then
							Tab:CreateToggle(func.Args)
						elseif f == "CreateDropdown" then
							Tab:CreateDropdown(func.Args)
						elseif f == "CreateInput" then
							Tab:CreateInput(func.Args)
						elseif f == "CreateSlider" then
							Tab:CreateSlider(func.Args)
						elseif f == "CreateParagraph" then
							Tab:CreateParagraph(func.Args)
						elseif f == "CreateLabel" then
							Tab:CreateLabel(func.Args)
						elseif f == "CreateKeybind" then
							Tab:CreateKeybind(func.Args)
						else
							l = false
						end; if l == true then
							--print("Created function "..tostring(func.Args.Flag or func.Args or "unknown").. " for ".. index.. " ["..string.gsub(func.Function, "Create", "").. "]")
						else
							print("Unable to create "..tostring(func.Function).. " function for ".. index .. " ["..i.."]")
						end
		
						if func.Args.Flag then
							--print("Creating env ".. tostring(func.Args.Flag) .. " with the value ".. tostring(func._envState))
							getgenv()[func.Args.Flag] = func._envState
						end
					end)
					if not s and e then
						print("[mopsHub UI Loader Error]: > "..e)
					end
				end
			end
		end
	end

	function game_client:enableGunMod(mod)
		getgenv()["_"..mod] = true
	end; function game_client:disableGunMod(mod)
		getgenv()["_"..mod] = false
	end; local function FixUnit(Vector)
		if Vector.Magnitude == 0 then
			return Vector3.zero
		end
		return Vector.Unit
	end; local function FlatCameraVector()
		local Camera = game.Workspace.CurrentCamera
		return Camera.CFrame.LookVector * Vector3.new(1,0,1), Camera.CFrame.RightVector * Vector3.new(1,0,1)
	end; local function InputToVelocity() local Velocities,LookVector,RightVector = {},FlatCameraVector()
		Velocities[1] = UserInputService:IsKeyDown(Enum.KeyCode.W) and LookVector or Vector3.zero
		Velocities[2] = UserInputService:IsKeyDown(Enum.KeyCode.S) and -LookVector or Vector3.zero
		Velocities[3] = UserInputService:IsKeyDown(Enum.KeyCode.A) and -RightVector or Vector3.zero
		Velocities[4] = UserInputService:IsKeyDown(Enum.KeyCode.D) and RightVector or Vector3.zero
		Velocities[5] = UserInputService:IsKeyDown(Enum.KeyCode.Space) and Vector3.new(0,1,0) or Vector3.zero
		Velocities[6] = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) and Vector3.new(0,-1,0) or Vector3.zero
		return FixUnit(Velocities[1] + Velocities[2] + Velocities[3] + Velocities[4] + Velocities[5] + Velocities[6])
	end; local function PlayerFly(Config)
		local Character = TS.Characters:GetCharacter(Player)
		if not Character then return end
		
		if not Config.Enabled then BodyVelocity.MaxForce = Vector3.zero
			if Character and Character.PrimaryPart
			and not Character.PrimaryPart.CanCollide then
				Character.PrimaryPart.CanCollide = true
			end return
		end
		if Character and Character.PrimaryPart then
			BodyVelocity.Parent = Character.PrimaryPart
			BodyVelocity.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			BodyVelocity.Velocity = InputToVelocity() * Config.Speed
			Character.PrimaryPart.CanCollide = not getgenv()._noclip
		end
	end; function game_client:isAlive()
		if PlayerTable[game.Players.LocalPlayer]then
			if PlayerTable[game.Players.LocalPlayer].Parent==game.Workspace.Characters then
				if PlayerTable[game.Players.LocalPlayer]:FindFirstChild("Root")then
					return true
				end
			end
		end
		return false
	end
	--> MAIN

	--Gun Mods | Source: self made (inf ammo made by The3Bakers#4565)

    Camera.Recoil.Update = function(a, b)
        if getgenv()._norecoil then
            return a.Value - a.LastValue
        end;
        return RecoilUpdate(a, b)
    end;

	task.spawn(function()
        local old;
        old = hookfunction(getrenv().math.random, function(...)
            local Args = {
                ...
            }
            if Args[1 + 0] == 7 then
                return task.wait(5 + 4)
            end;
            if tostring(getfenv(2).script) == "ItemControlScript" and getgenv()._nospread then
                if math.abs(Args[1]) == Args[2 + 0] then
                    Args[1] = - 0.1
                    Args[2 + 0] = 0.1
                    return old(unpack(Args))
                end
            end;
            return old(...)
        end)
    end)

	task.spawn(function()
		for _,v in pairs(game.ReplicatedStorage:GetChildren()) do
			if v:IsA("Folder") then
				for _,c in pairs(v:GetChildren()) do
					if c:IsA("ModuleScript") then
						for _,x in pairs(c:GetChildren()) do
							if x:IsA("Folder") then
								if x:FindFirstChild("Character") then
									RemoteFolder=x
									for _,z in pairs(x:GetChildren()) do
										RemoteObjects[z.Name.."_"..z.ClassName] = z
									end
								end
							end
						end
					end
				end
			end
		end
		game.RunService.RenderStepped:Connect(function()
			if game_client:isAlive() and getgenv()._infammo then
				RemoteFolder.Item_Paintball:FireServer("Reload",PlayerTable[Player].Backpack.Equipped.Value)
				PlayerTable[Player].Backpack.Equipped.Value.State.Ammo.Value = 999
			end
		end)
	end)

	--Silent Aim | Source: self made

	local function GetCharacters()
        temptable = {}
        for _, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= Player.Name and TS.Teams:GetPlayerTeam(v) ~= TS.Teams:GetPlayerTeam(Player) then
                temp2 = TS.Characters:GetCharacter(v)
                table.insert(temptable, temp2)
            end
        end;
        return temptable
    end; local function getClosestPlayerToCursor()
        local char = nil
        local _v = math.huge;
        for _, v in pairs(GetCharacters()) do
            if v:FindFirstChild("Body") and v.Body:FindFirstChild("Head") then
                local Vp = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(v.Body.Head.Position)
                local d = (Vector2.new(Vp.X, Vp.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude;
                if d < _v and d <= getgenv()._fov then
                    char = v;
                    _v = d
                end
            end
        end;
        return char
    end; local function getHitPart()
        if getgenv()._hitpart == "Random" then
            if math.random(1 + 0, 3) == 1 then
                return "Head"
            else
                return "Chest"
            end
        else
            return getgenv()._hitpart
        end
    end; local getdinfo = function(arg)
        return debug.getinfo(arg + 1 + 0).func
    end;
    OldIndex = hookfunction(getrawmetatable(game).__index, function(...)
        local a, b = ...
        if tostring(a) == "Camera" and tostring(b) == "CFrame" and tostring(getfenv(2).script) == "ItemControlScript" then
            if getgenv()._silentaim and getgenv()._hitchance >= math.random(1, 100) and getClosestPlayerToCursor() and tostring(debug.getinfo(getdinfo(3)).name) == "LookVector" then
                local plr = getClosestPlayerToCursor()
                if plr then
                    cam = game:GetService("Workspace").CurrentCamera;
                    if plr:FindFirstChild("Body") then
                        local hitpart = plr.Body:FindFirstChild(getHitPart())
                        if hitpart then
                            cam = {
                                CFrame = CFrame.new(cam.CFrame.Position, hitpart.Position or Vector3.new(0, 0, 0 + 0))
                            }
                        end
                    end;
                    return (cam.CFrame)
                end
            end
        end;
        return OldIndex(...)
    end)

	--Wallbang | Source: idk

	task.spawn(function()
        while task.wait() do
            setconstant(Control, tonumber(table.find(getconstants(Control), "Stand")) + 1 + 0, getgenv()._sprintSpeed)
            if getgenv()._wallbang then
                debug.setupvalue(Raycast.CastGeometryAndEnemies, 1, nil)
                debug.setupvalue(Raycast.CastGeometryAndEnemies, 2, nil)
            else
                debug.setupvalue(Raycast.CastGeometryAndEnemies, 1, game:GetService("Workspace").Geometry)
                debug.setupvalue(Raycast.CastGeometryAndEnemies, 2, game:GetService("Workspace").Terrain)
            end
        end
    end)

	--FOV

	local FOVCircle = Drawing.new("Circle")
	FOVCircle.Thickness = 2;
	FOVCircle.NumSides = 460
	FOVCircle.Filled = false
	FOVCircle.Transparency = 0.6
	FOVCircle.Radius = getgenv()._fov;
	FOVCircle.Color = Color3.new(0, 255, 0)

	game:GetService("RunService").Stepped:Connect(function()
		FOVCircle.Position = UserInputService:GetMouseLocation()
		FOVCircle.Radius = getgenv()._fov;
		if getgenv()._showfov then
			FOVCircle.Visible = true
		else
			FOVCircle.Visible = false
		end
	end)
end)
if not s and e then
    print("[mopsHub Error]: "..e)
end
