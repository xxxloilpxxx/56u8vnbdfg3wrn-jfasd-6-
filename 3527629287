local s,e = pcall(function()
    if not(game.PlaceId == 3527629287) then return end
    repeat
		task.wait()
	until game:IsLoaded()
    --if getgenv().__mpho_1__loaded__ == true then return warn("[mopsHub Loader]: mopsHub is already loaded.") end
	getgenv().__mpho_1__loaded__ = true

    getgenv = getgenv

    --MODULES
	local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
	local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
    local ESPFramework = loadstring(game:HttpGet("https://raw.githubusercontent.com/NougatBitz/Femware-Leak/main/ESP.lua", true))()
	local Notify = AkaliNotif.Notify;
	local writeclipboard,encodeb64,decodeb64,Request = ((syn and syn.write_clipboard) or setclipboard),((syn and syn.crypt.base64.encode) or (Krnl and Krnl.Base64.Encode)),((syn and syn.crypt.base64.decode) or (Krnl and Krnl.Base64.Decode)),(http_request or syn and syn.request or request or nil)
	local Player = game:GetService("Players").LocalPlayer
	local settings = {
		autoLoadConfigs = nil,
	}
    local ESPSettings = {
        PlayerESP = {
            Enabled = getgenv()._esp,
            TracersOn = getgenv()._esptracers,
            BoxesOn = getgenv()._espboxes,
            NamesOn = getgenv()._espnames,
            DistanceOn = getgenv()._espdistance,
            AttachShift = getgenv()._esptracerattachshift,
            HealthOn = false,
            ToolOn = false,
            TeamMates = getgenv()._espteamcheck,
            FaceCamOn = false,
            Distance = 2000,
        },
        ScrapESP = {
            Enabled = false,
            Distance = 2000,
            LegendaryOnly = true,
            RareOnly = true,
            GoodOnly = true,
            BadOnly = true
        },
        SafeESP = {
            Enabled = false,
            Distance = 2000,
            BigOnly = true,
            SmallOnly = true
        },
        RegisterESP = {
            Enabled = false,
            Distance = 2000
        },
        ESPColor = Color3.fromRGB(255, 255, 255),
        ToolColor = Color3.fromRGB(255, 255, 255)
    }
    local game_client = {}

    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer
    local Mouse = Player:GetMouse()
    local RunService = game:GetService("RunService")

    --STUFF THAT NEEDS TO RUN AT EXECUTE
	if isfile("/mopsHub/settings_bigpaintball.mhs") then
		local s,e = pcall(function()
			local file_settings = readfile("/mopsHub/settings_bigpaintball.mhs")
			local parsedSettings = {}
			local s,e = pcall(function()
				parsedSettings = game:GetService("HttpService"):JSONDecode(file_settings)
			end)
			if s then
				for _,v in pairs(parsedSettings) do
					settings[_] = v
				end
			else
				warn("[mopsHub Error]: Unable to parse local saved settings json.\nError:\n\n> ".. e)
			end
		end)
		if not s and e then
			print(e)
		end
	else
		autoLoadConfigs = true
		writefile("/mopsHub/settings_bigpaintball.mhs", tostring(game:GetService("HttpService"):JSONEncode(settings)))
		print("[mopsHub Debug]: Created local config file.")
	end

    --ENV
    getgenv().ESPFramework = ESPFramework
    getgenv()._esptracerattachshift = 1
    getgenv()._WINDOW = {
		Tabs = {},
	}

	--WINDOW CONFIG
	local _TABS = {
		"Weapon",
		"Visual",
		"Character",
		"Credits"
	}

    local _FUNCTIONS = {
        ["Weapon"] = {
            {
				Function = "CreateSection",
				Args = "━ Gun Mods ━",
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Automatic",
					Flag = "_automatic",
					Callback = function(Value)
						getgenv()._automatic = Value
                        if Value == true then
                            game_client:enableGunMod("automatic")
                        else
                            game_client:disableGunMod("automatic")
                        end
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Rapid Fire",
					Flag = "_rapidfire",
					Callback = function(Value)
						getgenv()._rapidfire = Value
                        if Value == true then
                            game_client:enableGunMod("rapidfire")
                        else
                            game_client:disableGunMod("rapidfire")
                        end
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Straight Shot",
					Flag = "_straightshot",
					Callback = function(Value)
						getgenv()._straightshot = Value
                        if Value == true then
                            game_client:enableGunMod("straightshot")
                        else
                            game_client:disableGunMod("straightshot")
                        end
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "One Shot",
					Flag = "_oneshot",
					Callback = function(Value)
						getgenv()._oneshot = Value
                        if Value == true then
                            game_client:enableGunMod("damage")
                        else
                            game_client:disableGunMod("damage")
                        end
					end,
				}
			},
        },
        ["Visual"] = {
            {
				Function = "CreateSection",
				Args = "━ ESP ━",
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "ESP",
					Flag = "_esp",
					Callback = function(Value)
						getgenv()._esp = Value
                        getgenv().updateespvalues()
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Boxes",
					Flag = "_espboxes",
					Callback = function(Value)
						getgenv()._espboxes = Value
                        getgenv().updateespvalues()
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Tracers",
					Flag = "_esptracers",
					Callback = function(Value)
						getgenv()._esptracers = Value
                        getgenv().updateespvalues()
					end,
				}
			},
            {
				Function = "CreateDropdown",
				_envState = "Bottom",
				Args = {
					Name = "Tracers Orientation",
					Flag = "_tracersorientation",
					Options = {"Bottom","Middle","Top"},
					CurrentOption = "Bottom",
					Callback = function(Value)
                        local v = 0

                        if Value == "Bottom" then
                            v = 1
                        elseif Value == "Middle" then
                            v = 2
                        elseif Value == "Top" then
                            v = 1000
                        end
						getgenv()._esptracerattachshift = v or 0
                        getgenv().updateespvalues()
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Names",
					Flag = "_espnames",
					Callback = function(Value)
						getgenv()._espnames = Value
                        getgenv().updateespvalues()
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Distance",
					Flag = "_espdistance",
					Callback = function(Value)
						getgenv()._espdistance = Value
                        getgenv().updateespvalues()
					end,
				}
			},
            {
				Function = "CreateToggle",
				_envState = true,
				Args = {
					Name = "Team Check",
					Flag = "_espteamcheck",
					Callback = function(Value)
						getgenv()._espteamcheck = not Value
                        getgenv().updateespvalues()
					end,
				}
			},
        },
        ["Character"] = {
            {
				Function = "CreateToggle",
				_envState =  false,
				Args = {
					Name = "Speed Hack",
					Flag = "_speedhack",
					Callback = function(Value)
						getgenv()._speedhack = Value
                        if Value == true then
                            game_client:enableGunMod("speed")
                        else
                            game_client:disableGunMod("speed")
                        end
					end,
				}
			},
            {
                Function = "CreateParagraph",
                Args = {
                    Title = "Notes:",
                    Content = "! Sprint once to apply the speed hack !"
                }
            },
        },
    }

    local _CREDITS = {
		["Developers"] = {
			{"ShyFlooo","Programmer"},
		},
	}

    --Functions | Source: some self made

    --CREATE WINDOW
	local Window = Rayfield:CreateWindow({
		Name = "mopsHub - BIG Paintball",
		LoadingTitle = "mopsHub - BIG Paintball",
		LoadingSubtitle = "by ShyFlooo",
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "/mopsHub/.config", -- Create a custom folder for your hub/game
			FileName = "mopshub_bigpaintball"
		}, 
		KeySystem = true, -- Set this to true to use our key system
		KeySettings = {
			Title = "mopsHub - BIG Paintball",
			Subtitle = "Key System",
			Note = "Key here (copied): discord.gg/g4EGAwjUAK",
			FileName = "MOPSHUBKEY",
			SaveKey = true,
			GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
			Key = "bUftwfaTxaoD8Pf2iExzyyRkdVLJRcmyT"
		}
	})

	--SETUP WINDOW
	for index, name in pairs(_TABS) do
		local w = Window:CreateTab(name)
		getgenv()._WINDOW.Tabs[name] = w
	end
    getgenv()._WINDOW.Tabs["Credits"]:CreateSection("━ Credits ━")
	for index, value in pairs(_CREDITS) do
		local content = ""
		for i,data in pairs(value) do
			if #data[2] > 0 then
				content = content.."\n"..data[1].." - ".. data[2]
			else
				content = content.."\n"..data[1]
			end
		end
		getgenv()._WINDOW.Tabs["Credits"]:CreateParagraph({Title = index, Content = content})
	end

	for index, funcs in pairs(_FUNCTIONS) do
		print("Loaded "..#funcs.." function(s) for ".. index)
		for i, func in pairs(funcs) do
			if func.Function and func.Args then
				local Tab = getgenv()._WINDOW.Tabs[index]
				if Tab then
					local s,e = pcall(function()
						local f,l = func.Function, true
						if f == "CreateSection" then
							Tab:CreateSection(func.Args)
						elseif f == "CreateButton" then
							Tab:CreateButton(func.Args)
						elseif f == "CreateToggle" then
							Tab:CreateToggle(func.Args)
						elseif f == "CreateDropdown" then
							Tab:CreateDropdown(func.Args)
						elseif f == "CreateInput" then
							Tab:CreateInput(func.Args)
						elseif f == "CreateSlider" then
							Tab:CreateSlider(func.Args)
						elseif f == "CreateParagraph" then
							Tab:CreateParagraph(func.Args)
						elseif f == "CreateLabel" then
							Tab:CreateLabel(func.Args)
						elseif f == "CreateKeybind" then
							Tab:CreateKeybind(func.Args)
						else
							l = false
						end; if l == true then
							--print("Created function "..tostring(func.Args.Flag or func.Args or "unknown").. " for ".. index.. " ["..string.gsub(func.Function, "Create", "").. "]")
						else
							print("Unable to create "..tostring(func.Function).. " function for ".. index .. " ["..i.."]")
						end
		
						if func.Args.Flag then
							--print("Creating env ".. tostring(func.Args.Flag) .. " with the value ".. tostring(func._envState))
							getgenv()[func.Args.Flag] = func._envState
						end
					end)
					if not s and e then
						print("[mopsHub UI Loader Error]: > "..e)
					end
				end
			end
		end
	end

    getgenv().updateespvalues = function()
        ESPFramework.Color = ESPSettings.ESPColor
        ESPFramework.ToolColor = ESPSettings.ToolColor
        ESPFramework.Tracers = getgenv()._esptracers
        ESPFramework.Names = getgenv()._espnames
        ESPFramework.Health = getgenv()._esphealth
        ESPFramework.Distance = getgenv()._espdistance
        ESPFramework.Tool = getgenv()._esptool
        ESPFramework.Boxes = getgenv()._espboxes
        ESPFramework.FaceCamera = ESPSettings.PlayerESP.FaceCamOn
        ESPFramework.TeamMates = getgenv()._espteamcheck
        ESPFramework.AttachShift = getgenv()._esptracerattachshift
        ESPFramework:Toggle(getgenv()._esp)
    end; getgenv().updateespvalues()

    --> Setup client stuff
    local g = getgc(true)

    if not getgenv().__mh_gunsbackup_ then
        getgenv().__mh_gunsbackup_ = true
        getgenv().gunsbackup = {}
        for _,v in pairs(g) do
            if typeof(v) == "table" then
                if rawget(v,"shotrate") then
                    pcall(function()
                        getgenv().gunsbackup[v.displayName] = {
                            shotrate = v.shotrate,
                            automatic = v.automatic,
                            velocity = v.velocity,
                            damage = v.damage,
                            additionalSpeed = v.additionalSpeed,
                        }
                    end)
                end
            end
        end
    end; function game_client:enableGunMod(mod)
        for _,v in pairs(g) do
            if typeof(v) == "table" then
                if rawget(v,"shotrate") then
                    if mod == "rapidfire" then
                        v.shotrate = 0.037
                    elseif mod == "automatic" then
                        v.automatic = true
                    elseif mod == "straightshot" then
                        v.velocity = 5 + 994
                    elseif mod == "damage" then
                        v.damage = 999
                    elseif mod == "speed" then
                        v.additionalSpeed = 50
                    elseif mod == "all" then
                        v.shotrate = 0.037
                        v.automatic = true
                        v.velocity = 5 + 994
                        v.damage = 999
                        v.additionalSpeed = 50
                    end
                end
            end
        end
    end; function game_client:disableGunMod(mod)
        for _,v in pairs(g) do
            if typeof(v) == "table" then
                if rawget(v,"shotrate") then
                    pcall(function()
                        if mod == "rapidfire" then
                            v.shotrate = getgenv().gunsbackup[v.displayName].shotrate
                        elseif mod == "automatic" then
                            v.automatic = getgenv().gunsbackup[v.displayName].automatic
                        elseif mod == "straightshot" then
                            v.velocity = getgenv().gunsbackup[v.displayName].velocity
                        elseif mod == "damage" then
                            v.damage = getgenv().gunsbackup[v.displayName].damage
                        elseif mod == "speed" then
                            v.additionalSpeed = getgenv().gunsbackup[v.displayName].additionalSpeed
                        elseif mod == "all" then
                            v.shotrate = getgenv().gunsbackup[v.displayName].shotrate
                            v.automatic = getgenv().gunsbackup[v.displayName].automatic
                            v.velocity = getgenv().gunsbackup[v.displayName].velocity
                            v.damage = getgenv().gunsbackup[v.displayName].damage
                            v.additionalSpeed = getgenv().gunsbackup[v.displayName].additionalSpeed
                        end
                    end)
                end
            end
        end
    end

	--> MAIN
end)
if not s and e then
    print("[mopsHub Error]: "..e)
end
